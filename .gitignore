# Local .terraform directories
**/.terraform/*
*.terraform*
# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

#Arquivo .env
*.env*
#Arquivo .pub
*.pub*
#Arquivo .out
plan*.out

# Arquivos gerados pelo Python
__pycache__/

# Arquivos de byte compilado
*.pyc
*.pyo
*.pyd

# Ambiente virtual
venv/
env/
*.env

# Arquivo de configuração do ambiente (por exemplo, .env)
.env

# Logs e arquivos temporários
*.log
*.pot
*.po
*.mo
*.tmp

# Arquivos de configuração específicos para editores
.vscode/
.idea/
*.sublime-project
*.sublime-workspace

# Outros
.DS_Store
Thumbs.db
# Arquivos do Python
bin/
include/
lib/
*.cfg
*-log

# Arquivos e diretórios específicos do Ansible
*.retry
*.log
*.pid
*.ini

# Diretórios específicos do Python (caso você use módulos Python)
__pycache__/
*.pyc

# Variáveis sensíveis e arquivos de senhas (utilize Ansible Vault)
vars/secrets.yml